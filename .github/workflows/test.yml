name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 21]

    defaults:
      run:
        working-directory: packages/tsports/uniseg

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup Go (for comparative testing)
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.bun
          node_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      run: bun install

    - name: Build project
      run: bun run build

    - name: Run unit tests
      run: bun test

    - name: Test Go compatibility
      run: |
        cd test/corpus/basic/001-grapheme-count
        go run case.go > go-output.txt
        bun --bun run case.ts > ts-output.txt
        if ! diff go-output.txt ts-output.txt; then
          echo "❌ Go/TypeScript output mismatch!"
          echo "Go output:"
          cat go-output.txt
          echo "TypeScript output:"
          cat ts-output.txt
          exit 1
        fi
        echo "✅ Go/TypeScript outputs match perfectly!"

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: test
    
    defaults:
      run:
        working-directory: packages/tsports/uniseg
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
        
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      
    - name: Install dependencies
      run: bun install
      
    - name: Run tests with coverage
      run: bun test --coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/tsports/uniseg

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - name: Install dependencies
      run: bun install

    - name: Type check
      run: bun run build

    - name: Lint code (if configured)
      run: |
        if [ -f "eslint.config.js" ] || [ -f ".eslintrc.json" ]; then
          bun run lint
        else
          echo "No linting configuration found, skipping..."
        fi